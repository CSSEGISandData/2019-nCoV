library(readxl)
library(httr)
library(tidyverse)
library(data.table)
library(scales)
library(directlabels)
library(knitr)
covid_files <- list.files(path = "csse_covid_19_data/csse_covid_19_daily_reports", pattern = ".csv", full.names = T)
covid_files <- list.files(path = "csse_covid_19_data/csse_covid_19_daily_reports", pattern = ".csv", full.names = T)
basename(covid_files)
covid_data <- map(covid_files,
function(x) {
fread(x, na = "") %>% mutate(Date = as.Date(gsub(".csv", "", basename(x)), format = "%m-%d-%Y"))
}) %>% bind_rows() %>%
rename_all(.funs = ~gsub("/| ", "_", .)) %>%
mutate(Country_Region = gsub("Mainland China", "China", Country_Region))
covid_data <- map(covid_files,
function(x) {
fread(x, na = "") %>% mutate(Date = as.Date(gsub(".csv", "", basename(x)), format = "%m-%d-%Y"))
}) %>% bind_rows()
View(covid_data)
covid_data <- map(covid_files,
function(x) {
fread(x, na = "") %>% mutate(Date = as.Date(gsub(".csv", "", basename(x)), format = "%m-%d-%Y"))
}) %>% bind_rows() %>%
rename_all(.funs = ~gsub("/| ", "_", trimws(.)))
covid_data <- map(covid_files,
function(x) {
fread(x, na = "") %>%
mutate(Date = as.Date(gsub(".csv", "", basename(x)), format = "%m-%d-%Y")) %>%
rename(l)
}) %>% bind_rows()
covid_data <- map(covid_files,
function(x) {
fread(x, na = "") %>%
mutate(Date = as.Date(gsub(".csv", "", basename(x)), format = "%m-%d-%Y"))
}) %>% bind_rows()
colnames(covid_data)
ovid_data <- map(covid_files,
function(x) {
fread(x, na = "") %>%
mutate(Date = as.Date(gsub(".csv", "", basename(x)), format = "%m-%d-%Y")) %>%
rename(Latitude = Lat, Longitude = Long_)
}) %>% bind_rows() %>%
rename_all(.funs = ~gsub("/| ", "_", trimws(.))) %>%
mutate(Country_Region = gsub("Mainland China", "China", Country_Region))
covid_data <- map(covid_files,
function(x) {
fread(x, na = "") %>%
mutate(Date = as.Date(gsub(".csv", "", basename(x)), format = "%m-%d-%Y")) %>%
possibly(rename, otherwise = .)(Latitude = Lat, Longitude = Long_)
}) %>% bind_rows() %>%
rename_all(.funs = ~gsub("/| ", "_", trimws(.))) %>%
mutate(Country_Region = gsub("Mainland China", "China", Country_Region))
covid_data <- map(covid_files,
function(x) {
fread(x, na = "") %>%
mutate(Date = as.Date(gsub(".csv", "", basename(x)), format = "%m-%d-%Y")) %>%
possibly(rename, otherwise = .)(Latitude = Lat, Longitude = Long_)
}) %>% bind_rows()
covid_data <- map(covid_files,
function(x) {
fread(x, na = "") %>%
mutate(Date = as.Date(gsub(".csv", "", basename(x)), format = "%m-%d-%Y")) %>%
possibly(rename, otherwise = .)(Latitude = Lat, Longitude = Long_) %>%
rename_all(.funs = ~gsub("/| ", "_", trimws(.)))
}) %>% bind_rows() %>%
mutate(Country_Region = gsub("Mainland China", "China", Country_Region))
pander::pander(basename(covid_files))
install.packages(pander)
install.packages("pander")
pander::pander(basename(covid_files))
pander::pander(gsub("_|.csv", "", basename(covid_files)))
glimpse(covid_data)
covid_data %>% filter(Date > "2020-03-01") %>% glimpse()
covid_data %>% filter(Date > "2020-03-20") %>% glimpse()
covid_data %>% filter(Date > "2020-03-25") %>% glimpse()
covid_world <- covid_data %>%
group_by(Date) %>%
summarize(Confirmed = sum(Confirmed),
Deaths = sum(Deaths),
Recovered = sum(Recovered)) %>%
gather(key = "Outcome", value = "Total", -Date) %>%
filter(!is.na(Total))
covid_world %>%
ggplot(aes(x = Date, y = Total, color = Outcome)) +
geom_line() +
scale_y_continuous(labels = comma) +
scale_colour_discrete(guide = 'none') +
scale_x_date(breaks = pretty_breaks(10), expand = c(0, 5)) +
geom_dl(aes(label = Outcome), method = list(dl.trans(x = x + 0.2), "last.points", cex = 0.8)) +
coord_cartesian(clip = 'off') +
theme_bw() +
ggtitle("Covid19 Cases in The World")
covid_world %>%
ggplot(aes(x = Date, y = Total, fill = Outcome)) +
geom_area(position="fill", stat="identity", alpha=0.6) +
scale_x_date(breaks = pretty_breaks(10)) +
theme_bw()
covid_world %>%
ggplot(aes(x = Date, y = Total, fill = Outcome)) +
geom_area(position="fill", stat="identity", alpha=0.6) +
scale_x_date(breaks = pretty_breaks(10)) +
theme_classic()
View(covid_data)
View(covid_world)
covid_world %>%
spread(key = "Outcome", value = "Total")
View(covid_world)
covid_world <- covid_world %>%
spread(key = "Outcome", value = "Total") %>%
mutate(Death_Rate = Deaths/Confirmed,
Recovered_Rate = Recovered/Confirmed)
View(covid_world)
mutate(Death_Rate = Deaths/Confirmed,
Recovered_Rate = Recovered/Confirmed)
covid_world <- covid_data %>%
group_by(Date) %>%
summarize(Confirmed = sum(Confirmed),
Deaths = sum(Deaths),
Recovered = sum(Recovered)) %>%
gather(key = "Outcome", value = "Total", -Date) %>%
filter(!is.na(Total))
covid_world <- covid_world %>%
spread(key = "Outcome", value = "Total") %>%
filter(!is.na(Deaths)) %>%
mutate(Death_Rate = Deaths/Confirmed,
Recovered_Rate = Recovered/Confirmed)
View(covid_data)
covid_world <- covid_data %>%
group_by(Date) %>%
summarize(Confirmed = sum(Confirmed),
Deaths = sum(Deaths),
Recovered = sum(Recovered)) %>%
gather(key = "Outcome", value = "Total", -Date) %>%
filter(!is.na(Total))
gather(key = "Outcome", value = "Total", -Date)
covid_world %>%
spread(key = "Outcome", value = "Total") %>%
filter(!is.na(Deaths)) %>%
mutate(Death_Rate = Deaths/Confirmed,
Recovered_Rate = Recovered/Confirmed) %>%
select(Date, Death_Rate, Recovered_Rate) %>%
gather(key = "Outcome", value = "Total", -Date)
covid_world %>%
spread(key = "Outcome", value = "Total") %>%
filter(!is.na(Deaths)) %>%
mutate(Death_Rate = Deaths/Confirmed,
Recovered_Rate = Recovered/Confirmed) %>%
select(Date, Death_Rate, Recovered_Rate) %>%
gather(key = "Outcome", value = "Total", -Date) %>%
ggplot(aes(x = Date, y = Total, color = Outcome)) +
geom_line()
covid_world %>%
ggplot(aes(x = Date, y = Total, fill = Outcome)) +
geom_area(position="fill", stat="identity", alpha=0.6) +
scale_x_date(breaks = pretty_breaks(10)) +
theme_classic() +
ylab("Proportion") +
ggtitle("Stacked Proportion of World Cases and Outcomes")
covid_world %>%
ggplot(aes(x = Date, y = Total, fill = Outcome)) +
geom_area(position="fill", stat="identity", alpha=0.6) +
scale_x_date(breaks = pretty_breaks(10)) +
theme_classic() +
ylab("Proportion") +
ggtitle("Stacked Proportion of World Cases and Outcomes")
covid_world %>%
spread(key = "Outcome", value = "Total") %>%
filter(!is.na(Deaths)) %>%
mutate(Death_Rate = Deaths/Confirmed,
Recovered_Rate = Recovered/Confirmed) %>%
select(Date, Death_Rate, Recovered_Rate) %>%
gather(key = "Outcome", value = "Total", -Date) %>%
ggplot(aes(x = Date, y = Total, color = Outcome)) +
geom_line() +
theme_bw()
covid_world %>%
spread(key = "Outcome", value = "Total") %>%
filter(!is.na(Deaths)) %>%
mutate(Death_Rate = Deaths/Confirmed,
Recovered_Rate = Recovered/Confirmed) %>%
select(Date, Death_Rate, Recovered_Rate) %>%
gather(key = "Outcome", value = "Total", -Date) %>%
ggplot(aes(x = Date, y = Total, color = Outcome)) +
geom_line() +
theme_bw()
covid_world %>%
spread(key = "Outcome", value = "Total") %>%
filter(!is.na(Deaths)) %>%
mutate(Death_Rate = Deaths/Confirmed,
Recovered_Rate = Recovered/Confirmed) %>%
select(Date, Death_Rate, Recovered_Rate) %>%
gather(key = "Outcome", value = "Total", -Date) %>%
ggplot(aes(x = Date, y = Total, fill = Outcome)) +
geom_area(position="fill", stat="identity", alpha=0.6) +
scale_x_date(breaks = pretty_breaks(10)) +
theme_classic() +
ylab("Proportion") +
ggtitle("Stacked Proportion of World Cases and Outcomes")
