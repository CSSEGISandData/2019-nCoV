{
df = read_csv(file.path(path_data,df))
df = df %>% rename(country = contains("country"), date_old = contains("Update"))
}
tbl <- list.files(path = path_data, pattern = "*.csv") %>% map(~fun1(.))
tbl
for(i in 1:length(tbl))
{
print(i)
print(unique(names( guess_formats(tbl[[i]]$date_old, c("mdy_HM", "dmy_HMS", "ymd_HMS"), print_matches = FALSE))))
}
tbl[[62]]$date_old
tbl[[62]]
tbl[[1]]
tbl[[2]]
tbl[[3]]
tbl[[4]]
tbl[[20]]
tbl[[64]]
tbl[[64]]$date_old
print(unique(names(guess_formats(tbl[[64]]$date_old, c("mdy_HM", "dmy_HMS", "ymd_HMS"), print_matches = FALSE))))
help("as.Date")
tbl[[1]]
fun1 <- function(df)
{
df = read_csv(file.path(path_data,df))
df = df %>% rename(country = contains("country"), date_old = contains("Update"))
df$frmt_vec = unique(names(guess_formats(df$date_old, c("mdy_HM", "dmy_HMS", "ymd_HMS"), print_matches = FALSE)))
}
tbl <- list.files(path = path_data, pattern = "*.csv") %>% map(~fun1(.))
fun1 <- function(df)
{
df = read_csv(file.path(path_data,df))
df = df %>% rename(country = contains("country"), date_old = contains("Update"))
frmt_vec = unique(names(guess_formats(df$date_old, c("mdy_HM", "dmy_HMS", "ymd_HMS"), print_matches = FALSE)))
}
tbl <- list.files(path = path_data, pattern = "*.csv") %>% map(~fun1(.))
tbl[[1]]
tbl[[2]]
tbl[1]
tbl
fun1 <- function(df)
{
df = read_csv(file.path(path_data,df))
df = df %>% rename(country = contains("country"), date_old = contains("Update"))
frmt_vec = unique(names(guess_formats(df$date_old, c("mdy_HM", "dmy_HMS", "ymd_HMS"), print_matches = FALSE)))
}
tbl <- list.files(path = path_data, pattern = "*.csv") %>% map(~fun1(.))
tbl[1]
fun1 <- function(df)
{
df = read_csv(file.path(path_data,df))
df = df %>% rename(country = contains("country"), date_old = contains("Update"))
#frmt_vec = unique(names(guess_formats(df$date_old, c("mdy_HM", "dmy_HMS", "ymd_HMS"), print_matches = FALSE)))
}
tbl <- list.files(path = path_data, pattern = "*.csv") %>% map(~fun1(.))
tbl[1]
fun1 <- function(df)
{
df = read_csv(file.path(path_data,df))
df = df %>% rename(country = contains("country"), date_old = contains("Update"))
frmt_vec = unique(names(guess_formats(date_old, c("mdy_HM", "dmy_HMS", "ymd_HMS"), print_matches = FALSE)))
}
tbl <- list.files(path = path_data, pattern = "*.csv") %>% map(~fun1(.))
fun1 <- function(df)
{
df = read_csv(file.path(path_data,df))
df = df %>% rename(country = contains("country"), date_old = contains("Update"))
frmt_vec = df%>% guess_formats(date_old, c("mdy_HM", "dmy_HMS", "ymd_HMS"), print_matches = FALSE)
# unique(names(guess_formats(date_old, c("mdy_HM", "dmy_HMS", "ymd_HMS"), print_matches = FALSE)))
}
tbl <- list.files(path = path_data, pattern = "*.csv") %>% map(~fun1(.))
fun1 <- function(df)
{
df = read_csv(file.path(path_data,df))
df = df %>% rename(country = contains("country"), date_old = contains("Update"))
frmt_vec = unique(names(guess_formats(df$date_old, c("mdy_HM", "dmy_HMS", "ymd_HMS"), print_matches = FALSE)))
df = list(df,frmt_vec )
}
tbl <- list.files(path = path_data, pattern = "*.csv") %>% map(~fun1(.))
tbl
tbl[1]
tbl[1][2]
tbl[1][[2]]
tbl[[1]]
tbl[[1]][2]
tbl[[1]][[2]]
fun2 <- function(df)
{
df1 = df %>% mutate(date_new = as.Date(date_old, tryFormats = df[[2]])) %>% group_by_at(.vars = c("country","date_new")) %>%              summarise(Confirmed_cum = sum(Confirmed), Death_cum = sum(Deaths), Recovered_cum = sum(Recovered),  n = n()) %>% ungroup
}
tbl2 =  tbl %>% map(~fun2(.))
debugonce(fun2)
tbl2 =  tbl %>% map(~fun2(.))
debugonce(fun2)
tbl2 =  tbl %>% map(~fun2(.))
df %>% mutate(date_new = as.Date(date_old, tryFormats = df[[2]]))
df
df[[2]]
tbl
fun1 <- function(df)
{
df = read_csv(file.path(path_data,df))
df = df %>% rename(country = contains("country"), date_old = contains("Update"))
frmt_vec = unique(names(guess_formats(df$date_old, c("mdy_HM", "dmy_HMS", "ymd_HMS"), print_matches = FALSE)))
df = list(df,frmt_vec )
}
tbl <- list.files(path = path_data, pattern = "*.csv") %>% map(~fun1(.))
tbl
fun2 <- function(df)
{
df1 = df %>% mutate(date_new = as.Date(date_old, tryFormats = df[[2]])) %>% group_by_at(.vars = c("country","date_new")) %>%              summarise(Confirmed_cum = sum(Confirmed), Death_cum = sum(Deaths), Recovered_cum = sum(Recovered),  n = n()) %>% ungroup
}
tbl2 =  tbl %>% map(~fun2(.))
debugonce(map)
debugonce(fun2)
tbl2 =  tbl %>% map(~fun2(.))
df
tbl
fun1 <- function(df)
{
df = read_csv(file.path(path_data,df))
df = df %>% rename(country = contains("country"), date_old = contains("Update"))
frmt_vec = unique(names(guess_formats(df$date_old, c("mdy_HM", "dmy_HMS", "ymd_HMS"), print_matches = FALSE)))
df = list(df,frmt_vec )
}
tbl <- list.files(path = path_data, pattern = "*.csv") %>% map(~fun1(.))
tbl
is.list(tbl)
fun2 <- function(df)
{
df1 = df[[1]] %>% mutate(date_new = as.Date(date_old, tryFormats = df[[2]])) %>% group_by_at(.vars = c("country","date_new")) %>%              summarise(Confirmed_cum = sum(Confirmed), Death_cum = sum(Deaths), Recovered_cum = sum(Recovered),  n = n()) %>% ungroup
}
tbl2 =  tbl %>% map(~fun2(.))
tbl2 =  tbl[1:5] %>% map(~fun2(.))
tbl
debugonce(map)
debugonce(fun2)
tbl2 =  tbl[1:5] %>% map(~fun2(.))
df1 = df[[1]] %>% mutate(date_new = as.Date(date_old, tryFormats = df[[2]]))
df[[2]]
df[[1]]
df[[2]]
df[1]
df
tbl[1:5]
tbl
fun1 <- function(df)
{
df = read_csv(file.path(path_data,df))
df = df %>% rename(country = contains("country"), date_old = contains("Update"))
frmt_vec = unique(names(guess_formats(df$date_old, c("mdy_HM", "dmy_HMS", "ymd_HMS"), print_matches = FALSE)))
df = list(df,frmt_vec )
}
tbl <- list.files(path = path_data, pattern = "*.csv") %>% map(~fun1(.))
tbl
tbl[[1]]
fun2 <- function(df)
{
df1 = df[[1]] %>% mutate(date_new = as.Date(date_old, tryFormats = df[[2]])) %>% group_by_at(.vars = c("country","date_new")) %>%              summarise(Confirmed_cum = sum(Confirmed), Death_cum = sum(Deaths), Recovered_cum = sum(Recovered),  n = n()) %>% ungroup
}
debugonce(map)
debugonce(fun2)
tbl %>% map(~fun2(.))
df[[1]]
df
tbl
tbl[[1]]
tbl[[2]]
fun1 <- function(df)
{
df = read_csv(file.path(path_data,df))
df = df %>% rename(country = contains("country"), date_old = contains("Update"))
frmt_vec = unique(names(guess_formats(df$date_old, c("mdy_HM", "dmy_HMS", "ymd_HMS"), print_matches = FALSE)))
df = list(df,frmt_vec )
}
tbl <- list.files(path = path_data, pattern = "*.csv") %>% map(~fun1(.))
tbl
df1 = tbl[[1]] %>% mutate(date_new = as.Date(date_old, tryFormats = tbl[[2]])) %>% group_by_at(.vars = c("country","date_new")) %>%              summarise(Confirmed_cum = sum(Confirmed), Death_cum = sum(Deaths), Recovered_cum = sum(Recovered),  n = n()) %>% ungroup
tbl[[1]]
df1 = tbl[[1]] %>% mutate(date_new = as.Date(date_old, tryFormats = tbl[[2]])) %>% group_by_at(.vars = c("country","date_new")) %>%              summarise(Confirmed_cum = sum(Confirmed), Death_cum = sum(Deaths), Recovered_cum = sum(Recovered),  n = n()) %>% ungroup
tbl[[1]] %>% mutate(date_new = as.Date(date_old, tryFormats = tbl[[2]]))
tbl[[1]]
tbl[[1]][[1]]
tbl[[1]][[1]] %>% mutate(date_new = as.Date(date_old, tryFormats = tbl[[2]]))
tbl[[1]][[1]] %>% mutate(date_new = as.Date(date_old, tryFormats = tbl[[1]][[2]]))
tbl[[1]][[2]]
tbl[[1]][[1]]
tbl[[1]][[1]] %>% mutate(date_new = as.Date(date_old, tryFormats = tbl[[1]][[2]]))
is.vector(tbl[[1]][[2]])
help(floor_date)
help(guess_formats)
tbl
tbl[[2]]
tbl[[1]][[2]]
tbl[[]][[2]]
tbl[[.]][[2]]
tbl[][[2]]
sapply(tbl,function(x) x[2])
unlist(sapply(tbl,function(x) x[2]))
unique(unlist(sapply(tbl,function(x) x[2])))
fun2 <- function(df)
{
if(df[[2]] %in% c("OmdyHM", "mdyHM"))
{df1 = df[[1]] %>% mutate(date_new = floor_date(mdy_hm(date_old), "day")) %>% group_by_at(.vars = c("country","date_new")) %>%              summarise(Confirmed_cum = sum(Confirmed), Death_cum = sum(Deaths), Recovered_cum = sum(Recovered),  n = n()) %>% ungroup
}
else{df1 = df[[1]] %>% mutate(date_new = floor_date(mdy_hm(date_old), "day")) %>% group_by_at(.vars = c("country","date_new")) %>%              summarise(Confirmed_cum = sum(Confirmed), Death_cum = sum(Deaths), Recovered_cum = sum(Recovered),  n = n()) %>% ungroup}
}
tbl2 =  tbl %>% map(~fun2(.))
tbl2
frmt_avail
frmt_avail = unique(unlist(sapply(tbl,function(x) x[2])))
frmt_avail
fun2 <- function(df)
{
if(df[[2]] %in% c("OmdyHM", "mdyHM"))
{df1 = df[[1]] %>% mutate(date_new = floor_date(mdy_hm(date_old), "day")) %>% group_by_at(.vars = c("country","date_new")) %>%              summarise(Confirmed_cum = sum(Confirmed), Death_cum = sum(Deaths), Recovered_cum = sum(Recovered),  n = n()) %>% ungroup
}
else{df1 = df[[1]] %>% mutate(date_new = floor_date(ymd_hms(date_old), "day")) %>% group_by_at(.vars = c("country","date_new")) %>%              summarise(Confirmed_cum = sum(Confirmed), Death_cum = sum(Deaths), Recovered_cum = sum(Recovered),  n = n()) %>% ungroup}
}
tbl2 =  tbl %>% map(~fun2(.))
tbl2
fun2 <- function(df)
{
if(df[[2]] %in% c("OmdyHM", "mdyHM"))
{df1 = df[[1]] %>% mutate(date_new = floor_date(mdy_hm(date_old), "day")) %>% group_by_at(.vars = c("country","date_new")) %>%              summarise(Confirmed_cum = sum(Confirmed), Death_cum = sum(Deaths), Recovered_cum = sum(Recovered),  n = n()) %>% ungroup
}
else{df1 = df[[1]] %>% mutate(date_new = floor_date(ymd_hms(date_old), "day")) %>% group_by_at(.vars = c("country","date_new")) %>%              summarise(Confirmed_cum = sum(Confirmed), Death_cum = sum(Deaths), Recovered_cum = sum(Recovered),  n = n()) %>% ungroup}
}
tbl2 =  tbl %>% map(~fun2(.)) %>% print()
View(tbl2)
#A. Libraries
library(tidyverse)
library(data.table)
library(survival)
library(gridExtra)
library(smcure) #mixture cure model
#library(My.stepwise) #My.stepwise.coxph
library(cowplot)
library(survminer)
library(Hmisc)
library(directlabels) #geom_dl add legend at the end of each line in the survival plot
library(hdnom)
library(rms)
library(pec) #for selectCox stepwsie procedure using pval and aic #
library(GoodmanKruskal) #association plot between many categorical variables#
library(lubridate) #year function
#B. PATH
if(grepl('[Ss]uliman', Sys.info()[['user']])){
if(Sys.info()[['user']]=="ababaker.suliman"){
#Office
path_global = "C:/Abubaker/RFunctions/"
} else {
#Home
path_global = "C:/IPH/RFunctions/"
}
} else {
path_global = "D:/Oulhaj/4_Research/00000_My_Projects/RFunctions/"
}
path_data = paste0("D:/Oulhaj/4_Research/00000_My_Projects/COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/")
#C. Load Global Functions##
#source(paste0(path_global,"functions_final.R"))
# source(paste0(path_global,"DemoTables.R"))
# source(paste0(path_global,"graphs.R"))
#
# #D. Load Local Functions##
# source("helpers_functions.R")
#E. General Parameters
#F. Read Data set##
fun1 <- function(df)
{
df = read_csv(file.path(path_data,df))
df = df %>% rename(country = contains("country"), date_old = contains("Update"))
frmt_vec = unique(names(guess_formats(df$date_old, c("mdy_HM", "dmy_HMS", "ymd_HMS"), print_matches = FALSE)))
df = list(df,frmt_vec )
}
tbl <- list.files(path = path_data, pattern = "*.csv") %>% map(~fun1(.))
frmt_avail = unique(unlist(sapply(tbl,function(x) x[2])))
frmt_avail
fun2 <- function(df)
{
if(df[[2]] %in% c("OmdyHM", "mdyHM"))
{df1 = df[[1]] %>% mutate(date_new = floor_date(mdy_hm(date_old), "day")) %>% group_by_at(.vars = c("country","date_new")) %>%              summarise(Confirmed_cum = sum(Confirmed), Death_cum = sum(Deaths), Recovered_cum = sum(Recovered),  n = n()) %>% ungroup
}
else{df1 = df[[1]] %>% mutate(date_new = floor_date(ymd_hms(date_old), "day")) %>% group_by_at(.vars = c("country","date_new")) %>%              summarise(Confirmed_cum = sum(Confirmed), Death_cum = sum(Deaths), Recovered_cum = sum(Recovered),  n = n()) %>% ungroup}
}
tbl[[1]] %>% map(~fun2(.))
tbl[[1]]
tbl[[1]][[1]] %>% map(~fun2(.))
tbl[[1]]
tbl[[1]][[1]]
tbl[[1]][[2]]
tbl2 =  tbl %>% map(~fun2(.))
tbl2 =  tbl[1:2] %>% map(~fun2(.))
tbl2 =  tbl[1] %>% map(~fun2(.))
tbl2 =  tbl[[1]] %>% map(~fun2(.))
is.list(tbl[1])
is.list(tbl[[1]])
debugonce(fun2)
debugonce(map)
tbl %>% map(~fun2(.))
df[[2]]
df[[1]]
df
tbl
tbl <- list.files(path = path_data, pattern = "*.csv") %>% map(~fun1(.))
frmt_avail = unique(unlist(sapply(tbl,function(x) x[2])))
debugonce(fun2)
debugonce(map)
tbl
tbl %>% map(~fun2(.))
tbl
tbl[[1]]
tbl %>% map(~fun2(.))
tbl <- list.files(path = path_data, pattern = "*.csv") %>% map(~fun1(.))
frmt_avail = unique(unlist(sapply(tbl,function(x) x[2])))
library(tidyverse)
library(data.table)
library(survival)
library(gridExtra)
library(smcure) #mixture cure model
#library(My.stepwise) #My.stepwise.coxph
library(cowplot)
library(survminer)
library(Hmisc)
library(directlabels) #geom_dl add legend at the end of each line in the survival plot
library(hdnom)
library(rms)
library(pec) #for selectCox stepwsie procedure using pval and aic #
library(GoodmanKruskal) #association plot between many categorical variables#
library(lubridate) #year function
#B. PATH
if(grepl('[Ss]uliman', Sys.info()[['user']])){
if(Sys.info()[['user']]=="ababaker.suliman"){
#Office
path_global = "C:/Abubaker/RFunctions/"
} else {
#Home
path_global = "C:/IPH/RFunctions/"
}
} else {
path_global = "D:/Oulhaj/4_Research/00000_My_Projects/RFunctions/"
}
path_data = paste0("D:/Oulhaj/4_Research/00000_My_Projects/COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/")
#C. Load Global Functions##
#source(paste0(path_global,"functions_final.R"))
# source(paste0(path_global,"DemoTables.R"))
# source(paste0(path_global,"graphs.R"))
#
# #D. Load Local Functions##
# source("helpers_functions.R")
#E. General Parameters
#F. Read Data set##
fun1 <- function(df)
{
df = read_csv(file.path(path_data,df))
df = df %>% rename(country = contains("country"), date_old = contains("Update"))
frmt_vec = unique(names(guess_formats(df$date_old, c("mdy_HM", "dmy_HMS", "ymd_HMS"), print_matches = FALSE)))
df = list(df,frmt_vec )
}
tbl1 <- list.files(path = path_data, pattern = "*.csv") %>% map(~fun1(.))
frmt_avail = unique(unlist(sapply(tbl1,function(x) x[2])))
fun2 <- function(df)
{
if(df[[2]] %in% c("OmdyHM", "mdyHM"))
{df1 = df[[1]] %>% mutate(date_new = floor_date(mdy_hm(date_old), "day")) %>% group_by_at(.vars = c("country","date_new")) %>%              summarise(Confirmed_cum = sum(Confirmed), Death_cum = sum(Deaths), Recovered_cum = sum(Recovered),  n = n()) %>% ungroup
}
else{df1 = df[[1]] %>% mutate(date_new = floor_date(ymd_hms(date_old), "day")) %>% group_by_at(.vars = c("country","date_new")) %>%              summarise(Confirmed_cum = sum(Confirmed), Death_cum = sum(Deaths), Recovered_cum = sum(Recovered),  n = n()) %>% ungroup}
}
tbl2 = tbl1
debugonce(map)
debugonce(fun2)
tbl2 %>% map(~fun2(.))
tbl1
tbl2
tbl2[1]
df[[1]] %>% mutate(date_new = floor_date(mdy_hm(date_old), "day"))
df
df[[1]]
a = df[[1]]
a
View(a)
df1 = df[[1]] %>% mutate(date_new = floor_date(mdy_hm(date_old), "day")) %>% group_by_at(.vars = c("country","date_new")) %>%              summarise(Confirmed_cum = sum(Confirmed), Death_cum = sum(Deaths), Recovered_cum = sum(Recovered),  n = n())
View(df1)
View(a)
df1 = df[[1]] %>% mutate(date_new = floor_date(mdy_hm(date_old), "day")) %>% group_by_at(.vars = c("country","date_new")) %>%              summarise(Confirmed_cum = sum(Confirmed), Death_cum = sum(Deaths), Recovered_cum = sum(Recovered),  n = n()) %>% ungroup
View(a)
View(df1)
fun2 <- function(df)
{
if(df[[2]] %in% c("OmdyHM", "mdyHM"))
{df1 = df[[1]] %>% mutate(date_new = floor_date(mdy_hm(date_old), "day")) %>% group_by_at(.vars = c("country","date_new")) %>%              summarise(Confirmed_cum = sum(Confirmed, na.rm = TRUE), Death_cum = sum(Deaths, na.rm = TRUE), Recovered_cum = sum(Recovered, na.rm = TRUE),  n = n()) %>% ungroup
}
else{df1 = df[[1]] %>% mutate(date_new = floor_date(ymd_hms(date_old), "day")) %>% group_by_at(.vars = c("country","date_new")) %>%              summarise(Confirmed_cum = sum(Confirmed, na.rm = TRUE), Death_cum = sum(Deaths, na.rm = TRUE), Recovered_cum = sum(Recovered, na.rm = TRUE),  n = n()) %>% ungroup}
}
tbl2 %>% map(~fun2(.))
df1 = df[[1]] %>% mutate(date_new = floor_date(mdy_hm(date_old), "day")) %>% group_by_at(.vars = c("country","date_new")) %>%              summarise(Confirmed_cum = sum(Confirmed), Death_cum = sum(Deaths), Recovered_cum = sum(Recovered),  n = n()) %>% ungroup
fun2 <- function(df)
{
if(df[[2]] %in% c("OmdyHM", "mdyHM"))
{df1 = df[[1]] %>% mutate(date_new = floor_date(mdy_hm(date_old), "day")) %>% group_by_at(.vars = c("country","date_new")) %>%              summarise(Confirmed_cum = sum(Confirmed, na.rm = TRUE), Death_cum = sum(Deaths, na.rm = TRUE), Recovered_cum = sum(Recovered, na.rm = TRUE),  n = n()) %>% ungroup
}
else{df1 = df[[1]] %>% mutate(date_new = floor_date(ymd_hms(date_old), "day")) %>% group_by_at(.vars = c("country","date_new")) %>%              summarise(Confirmed_cum = sum(Confirmed, na.rm = TRUE), Death_cum = sum(Deaths, na.rm = TRUE), Recovered_cum = sum(Recovered, na.rm = TRUE),  n = n()) %>% ungroup}
}
tbl2 = tbl1
tbl2 =  tbl2 %>% map(~fun2(.))
library(tidyverse)
library(data.table)
library(survival)
library(gridExtra)
library(smcure) #mixture cure model
#library(My.stepwise) #My.stepwise.coxph
library(cowplot)
library(survminer)
library(Hmisc)
library(directlabels) #geom_dl add legend at the end of each line in the survival plot
library(hdnom)
library(rms)
library(pec) #for selectCox stepwsie procedure using pval and aic #
library(GoodmanKruskal) #association plot between many categorical variables#
library(lubridate) #year function
#B. PATH
if(grepl('[Ss]uliman', Sys.info()[['user']])){
if(Sys.info()[['user']]=="ababaker.suliman"){
#Office
path_global = "C:/Abubaker/RFunctions/"
} else {
#Home
path_global = "C:/IPH/RFunctions/"
}
} else {
path_global = "D:/Oulhaj/4_Research/00000_My_Projects/RFunctions/"
}
path_data = paste0("D:/Oulhaj/4_Research/00000_My_Projects/COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/")
#C. Load Global Functions##
#source(paste0(path_global,"functions_final.R"))
# source(paste0(path_global,"DemoTables.R"))
# source(paste0(path_global,"graphs.R"))
#
# #D. Load Local Functions##
# source("helpers_functions.R")
#E. General Parameters
#F. Read Data set##
fun1 <- function(df)
{
df = read_csv(file.path(path_data,df))
df = df %>% rename(country = contains("country"), date_old = contains("Update"))
frmt_vec = unique(names(guess_formats(df$date_old, c("mdy_HM", "dmy_HMS", "ymd_HMS"), print_matches = FALSE)))
df = list(df,frmt_vec )
}
tbl1 <- list.files(path = path_data, pattern = "*.csv") %>% map(~fun1(.))
frmt_avail = unique(unlist(sapply(tbl1,function(x) x[2])))
fun2 <- function(df)
{
if(df[[2]] %in% c("OmdyHM", "mdyHM"))
{df1 = df[[1]] %>% mutate(date_new = floor_date(mdy_hm(date_old), "day")) %>% group_by_at(.vars = c("country","date_new")) %>%              summarise(Confirmed_cum = sum(Confirmed, na.rm = TRUE), Death_cum = sum(Deaths, na.rm = TRUE), Recovered_cum = sum(Recovered, na.rm = TRUE),  n = n()) %>% ungroup
}
else{df1 = df[[1]] %>% mutate(date_new = floor_date(ymd_hms(date_old), "day")) %>% group_by_at(.vars = c("country","date_new")) %>%              summarise(Confirmed_cum = sum(Confirmed, na.rm = TRUE), Death_cum = sum(Deaths, na.rm = TRUE), Recovered_cum = sum(Recovered, na.rm = TRUE),  n = n()) %>% ungroup}
}
tbl2 = tbl1
debugonce(fun2)
debugonce(map)
tbl2 %>% map(~fun2(.))
debugonce(fun2)
debugonce(map)
tbl2 %>% map(~fun2(.))
df1 = df[[1]] %>% mutate(date_new = floor_date(mdy_hm(date_old), "day")) %>% group_by_at(.vars = c("country","date_new")) %>%              summarise(Confirmed_cum = sum(Confirmed, na.rm = TRUE), Death_cum = sum(Deaths, na.rm = TRUE), Recovered_cum = sum(Recovered, na.rm = TRUE),  n = n()) %>% ungroup
View(df1)
df[[2]]
match(df2[[1]])
df2[[1]]
df[[2]]
df[[2]] %in% c("OmdyHM", "mdyHM")
match(df[[2]],c("OmdyHM", "mdyHM"))
any(df[[2]] %in% c("OmdyHM", "mdyHM"))
frmt_avail
fun2 <- function(df)
{
if(any(df[[2]] %in% c("OmdyHM", "mdyHM")))
{df1 = df[[1]] %>% mutate(date_new = floor_date(mdy_hm(date_old), "day")) %>% group_by_at(.vars = c("country","date_new")) %>%              summarise(Confirmed_cum = sum(Confirmed, na.rm = TRUE), Death_cum = sum(Deaths, na.rm = TRUE), Recovered_cum = sum(Recovered, na.rm = TRUE),  n = n()) %>% ungroup
}
else{
if(any(df[[2]] %in% c("OmdyHM", "mdyHM"))){df1 = df[[1]] %>% mutate(date_new = floor_date(ymd_hms(date_old), "day")) %>% group_by_at(.vars = c("country","date_new")) %>% summarise(Confirmed_cum = sum(Confirmed, na.rm = TRUE), Death_cum = sum(Deaths, na.rm = TRUE), Recovered_cum = sum(Recovered, na.rm = TRUE),  n = n()) %>% ungroup} else{"ERROR"}
}
}
tbl2 = tbl1
tbl2 =  tbl2 %>% map(~fun2(.))
tbl2
tbl[[62]]
tbl[62]
tbl
tbl1[62]
fun2 <- function(df)
{
if(any(df[[2]] %in% c("OmdyHM", "mdyHM")))
{df1 = df[[1]] %>% mutate(date_new = floor_date(mdy_hm(date_old), "day")) %>% group_by_at(.vars = c("country","date_new")) %>%              summarise(Confirmed_cum = sum(Confirmed, na.rm = TRUE), Death_cum = sum(Deaths, na.rm = TRUE), Recovered_cum = sum(Recovered, na.rm = TRUE),  n = n()) %>% ungroup
}
else{
if(any(df[[2]] %in% c("yOmdHMS", "ymdHMS"))){df1 = df[[1]] %>% mutate(date_new = floor_date(ymd_hms(date_old), "day")) %>% group_by_at(.vars = c("country","date_new")) %>% summarise(Confirmed_cum = sum(Confirmed, na.rm = TRUE), Death_cum = sum(Deaths, na.rm = TRUE), Recovered_cum = sum(Recovered, na.rm = TRUE),  n = n()) %>% ungroup} else{"ERROR"}
}
}
tbl2 = tbl1
tbl2 =  tbl2 %>% map(~fun2(.))
tbl2
View(tbl2)
tbl2[[1]]
tbl2[[2]]
tbl3 = bind_rows(tbl2)
tbl3
View(tbl3)
tbl3 = left_join(tbl2, by = c("df1ColName" = "df2ColName")) .
tbl3 = left_join(tbl2)
