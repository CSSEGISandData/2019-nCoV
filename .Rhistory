map<-get_map(location = 'US', zoom=4, maptype = "roadmap")
ggmap(map)
#Getting a map of the United States
map<-get_map(location = 'US', zoom=5, maptype = "roadmap")
ggmap(map)
#Getting a map of the United States
map<-get_map(location = 'US', zoom=4, maptype = "roadmap")
ggmap(map)
ggmap(map)
install.packages("rworldmap")
points(daily$Longitude, daily$Latitude, col="red", cex=.6)
names(daily)
world_map<-ggmap(map) + geom_point(aes(x=Longitude, y=Latitude), size=3, data=daily, alpha=.5)
world_map
#Getting a map of the United States
map<-get_map(location = 'world', zoom=4, maptype = "roadmap")
ggmap(map)
head(daily)
View(daily)
colnames(daily)<-c('State','Country','Date','Confirmed', 'Deaths', 'Recover', 'Lat', 'Long')
us_only<-daily %>% filter(Country=="US")
us_only<-daily %>% filter(`Country`=="US")
us_only<-daily %>% filter('Country'=="US")
View(us_only)
names(daily)
us_only<-daily %>% filter(daily$Country=="US")
us_only<-daily %>% filter(daily$Country="US")
daily<-read.csv2("C:/Users/Morganak/Documents/R/COVID_Project/COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/03-22-2020.csv", header=TRUE, sep=",", stringsAsFactors=FALSE)
str(daily)
names(daily)
colnames(daily)<-c('State','Country','Date','Confirmed', 'Deaths', 'Recover', 'Lat', 'Long')
us_only<-daily %>% filter(Country=="US")
daily<-read.csv2("C:/Users/Morganak/Documents/R/COVID_Project/COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/03-22-2020.csv", header=TRUE, sep=",", stringsAsFactors=FALSE)
str(daily)
names(daily)
colnames(daily)<-c('State','Country','Date','Confirmed', 'Deaths', 'Recover', 'Lat', 'Long')
us_only<-daily %>% filter_(Country=="US")
daily<-read.csv2("C:/Users/Morganak/Documents/R/COVID_Project/COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/03-22-2020.csv", header=TRUE, sep=",", stringsAsFactors=FALSE)
str(daily)
names(daily)
colnames(daily)<-c('State','Country','Date','Confirmed', 'Deaths', 'Recover', 'Lat', 'Long')
us_only<-daily %>% dplyr::filter_(Country=="US")
library(dplyr)
us_only<-daily %>% dplyr::filter_(Country=="US")
names(daily)
us_only<-daily %>% dplyr::filter_(`Country`=="US")
us_only<-daily %>% filter(Country=="US")
library(ggmap)
#Getting a map of the United States
map<-get_map(location = 'US', zoom=4, maptype = "roadmap")
us_only<-daily %>% dplyr::filter(Country=="US") %>% select('Confirmed','Lat', 'Long')
head(us_only)
us_only$Lat<-as.numeric(us_only$Lat)
us_only$Long<-as.numeric(us_only$Long)
world_map<-ggmap(map) + geom_point(data=us_only, aes(x=Long, y=Lat), size=3, alpha=.5)
world_map
#World time series data
confirm <- read_csv("csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
library(readr)
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(ggthemes)
library(ggmap)
library(mapproj)
library(tidyverse)
#World time series data
confirm <- read_csv("csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
names(confirm)
head(confirm)
#filtering down to just United States
us<-confirm %>% filter(`Country/Region`=="US")
head(us)
md<-us %>% filter(`Province/State`=="Maryland")
head(md)
#reshaping wide Cartesian view into long indexed view
#Removing country, lat, long cols
md<-md[,-c(2:4)]
names(md)[1]<-"State"
head(md)
md_short<-md %>% gather(Date, Confirmed, "1/22/20":"3/22/20")
md_short$Date<-as.Date(md_short$Date, "%m/%d/%y")#turning from char to date
head(md_short)
#Plot showing difference from one month ago to today
p<-ggplot(md_short, aes(Date,Confirmed))
p<-p+geom_bar(stat="identity")
p_short<-p + xlim(as.Date(c("2020-03-01", "2020-03-24"), format="%Y-%m-%d")) #only showing time since infection started
p_titles<-p_short + labs(x=NULL, y="Infected People", title="Confirmed COVID-19 Cases in Maryland", subtitle = "github.com/mkinlan/COVID-19.git")
p_titles + theme_economist()
library(raster)
library(rgdal)
library(sp)
library(mapproj)
library(ggmap) #to use this package, need to register with Google and use Maps Static API, Geocoding API & maybe Geolocation API
daily<-read.csv2("C:/Users/Morganak/Documents/R/COVID_Project/COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/03-22-2020.csv", header=TRUE, sep=",", stringsAsFactors=FALSE)
str(daily)
names(daily)
colnames(daily)<-c('State','Country','Date','Confirmed', 'Deaths', 'Recover', 'Lat', 'Long')
#Filtering to only US confirmed cases
us_only<-daily %>% dplyr::filter(Country=="US") %>% select('Confirmed','Lat', 'Long')
us_only$Lat<-as.numeric(us_only$Lat)
us_only$Long<-as.numeric(us_only$Long)
#Getting a map of the United States
map<-get_map(location = 'US', zoom=4, maptype = "roadmap")
#Adding points for confirmed cases
world_map<-ggmap(map) + geom_point(data=us_only, aes(x=Long, y=Lat), size=3, alpha=.5)
library(readr)
library(tidyverse)
#library(tidyr)
library(lubridate)
library(ggthemes)
#World time series data
confirm <- read_csv("csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
names(confirm)
head(confirm)
#filtering down to just United States
us<-confirm %>% filter(`Country/Region`=="US")
head(us)
md<-us %>% filter(`Province/State`=="Maryland")
head(md)
#reshaping wide Cartesian view into long indexed view
#Removing country, lat, long cols
md<-md[,-c(2:4)]
names(md)[1]<-"State"
md_short<-md %>% gather(Date, Confirmed, "1/22/20":"3/22/20")
md_short$Date<-as.Date(md_short$Date, "%m/%d/%y")#turning from char to date
head(md_short)
#Plot showing difference from one month ago to today
p<-ggplot(md_short, aes(Date,Confirmed))
p<-p+geom_bar(stat="identity")
p_short<-p + xlim(as.Date(c("2020-03-01", "2020-03-24"), format="%Y-%m-%d")) #only showing time since infection started
p_titles<-p_short + labs(x=NULL, y="Infected People", title="Confirmed COVID-19 Cases in Maryland", subtitle = "github.com/mkinlan/COVID-19.git")
p_titles + theme_economist()
library(raster)
library(rgdal)
library(sp)
library(mapproj)
library(ggmap) #to use this package, need to register with Google and use Maps Static API, Geocoding API & maybe Geolocation API
daily<-read.csv2("C:/Users/Morganak/Documents/R/COVID_Project/COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/03-22-2020.csv", header=TRUE, sep=",", stringsAsFactors=FALSE)
str(daily)
names(daily)
colnames(daily)<-c('State','Country','Date','Confirmed', 'Deaths', 'Recover', 'Lat', 'Long')
#Filtering to only US confirmed cases
us_only<-daily %>% dplyr::filter(Country=="US") %>% select('Confirmed','Lat', 'Long')
us_only$Lat<-as.numeric(us_only$Lat)
us_only$Long<-as.numeric(us_only$Long)
#Getting a map of the United States
map<-get_map(location = 'US', zoom=4, maptype = "roadmap")
#Adding points for confirmed cases
world_map<-ggmap(map) + geom_point(data=us_only, aes(x=Long, y=Lat), size=3, alpha=.5)
View(confirm)
#Reading in time series data for the world, cloned from GitHub
confirm <- read_csv("csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
library(readr)
library(dplyr)
library(tidyverse)
library(tidyr)
library(lubridate)
library(ggthemes)
#Reading in time series data for the world, cloned from GitHub
confirm <- read_csv("csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
names(confirm)
head(confirm)
#filtering down to just United States
us<-confirm %>% filter(`Country/Region`=="US" & `Province/State`=="Maryland")
head(us)
View(us)
#reshaping wide Cartesian view into long indexed view
md<-md[,-c(2:4)]#Removing country, lat, long cols
#filtering down to just United States
md<-confirm %>% filter(`Country/Region`=="US" & `Province/State`=="Maryland")
head(md)
#reshaping wide Cartesian view into long indexed view
md<-md[,-c(2:4)]#Removing country, lat, long cols
names(md)[1]<-"State"
md_short<-md %>% gather(Date, Confirmed, "1/22/20":"3/22/20")
md_short$Date<-as.Date(md_short$Date, "%m/%d/%y")#turning from char to date
head(md_short)
#Plot showing difference from one month ago to today
p<-ggplot(md_short, aes(Date,Confirmed))
p<-p+geom_bar(stat="identity")
p
p_short<-p + xlim(as.Date(c("2020-03-01", "2020-03-24"), format="%Y-%m-%d")) #only showing time since infection started
p_titles<-p_short + labs(x=NULL, y="Infected People", title="Confirmed COVID-19 Cases in Maryland", subtitle = "github.com/mkinlan/COVID-19.git")
p_titles + theme_economist()
p_short<-p + xlim(as.Date(c("2020-03-01", "2020-03-24"), format="%Y-%m-%d")) #only showing time since infection started
p_titles<-p_short + labs(x=NULL, y="Infected People", title="Confirmed COVID-19 Cases in Maryland", subtitle = "github.com/mkinlan/COVID-19.git")
p_titles + theme_economist()
p_short<-p + xlim(as.Date(c("2020-03-01", "2020-03-24"), format="%Y-%m-%d")) #only showing time since infection started
p_titles<-p_short + labs(x=NULL, y="Infected People", title="Confirmed COVID-19 Cases in Maryland", subtitle = "github.com/mkinlan/COVID-19.git")
p_titles + theme_economist()
p_short<-p + coord_cartesian(xlim(as.Date(c("2020-03-01", "2020-03-24"), format="%Y-%m-%d"))) #only showing time since infection started
p_titles<-p_short + labs(x=NULL, y="Infected People", title="Confirmed COVID-19 Cases in Maryland", subtitle = "github.com/mkinlan/COVID-19.git")
p_titles + theme_economist()
p_titles
world_map
daily<-read.csv2("C:/Users/Morganak/Documents/R/COVID_Project/COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/03-22-2020.csv", header=TRUE, sep=",", stringsAsFactors=FALSE)
str(daily)
names(daily)
colnames(daily)<-c('State','Country','Date','Confirmed', 'Deaths', 'Recover', 'Lat', 'Long')
#Filtering to only US confirmed cases
us_only<-daily %>% dplyr::filter(Country=="US") %>% dplyr::select('Confirmed','Lat', 'Long')
us_only$Lat<-as.numeric(us_only$Lat)
us_only$Long<-as.numeric(us_only$Long)
#Getting a map of the United States
map<-get_map(location = 'US', zoom=4, maptype = "roadmap")
library(ggmap)
#Getting a map of the United States
map<-get_map(location = 'US', zoom=4, maptype = "roadmap")
world_map<-ggmap(map) + geom_point(data=us_only, aes(x=Long, y=Lat), size=3, alpha=.5)
world_map
world_map
#Adding points for confirmed cases
world_map<-ggmap(map) + geom_point(data=us_only, aes(x=Long, y=Lat), size=5, alpha=.5)
world_map
#Adding points for confirmed cases
world_map<-ggmap(map) + geom_point(data=us_only, aes(x=Long, y=Lat), size=2, alpha=.5)
world_map
library(dplyr)
#Bubble map
map2<-map_data("world") %>% filter(region=="US")
ggplot() + geom_polygon(data = us_only, aes(x=Long, y=Lat), fill="grey", alpha=.4)
ggplot() + geom_polygon(data = map2, aes(x=Long, y=Lat), fill="grey", alpha=.4)
#Bubble map
map2<-map_data("world") %>% filter(region=="US") #getting boundaries of world (as polygon) and extracting US
#Bubble map
map2<-map_data("world") %>% filter(region=="UK") #getting boundaries of world (as polygon) and extracting US
?map_data
#Bubble map
map2<-map_data("world") %>% filter(region=="USA") #getting boundaries of world (as polygon) and extracting US
#Bubble map
map2<-map_data("world") %>% filter(region=="USA") #getting boundaries of world (as polygon) and extracting US
#Bubble map
map2<-map_data("world") %>% filter(region=="UK") #getting boundaries of world (as polygon) and extracting US
#Bubble map
map2<-map_data("world") %>% filter(region=="USA") #getting boundaries of world (as polygon) and extracting US
ggplot() + geom_polygon(data = map2, aes(x=long, y=lat, group=group), fill="grey", alpha=.4)
ggplot() + geom_polygon(data = map2, aes(x=long, y=lat, group=group), fill="grey", alpha=.3)
ggplot() + geom_polygon(data = map2, aes(x=long, y=lat, group=group), fill="grey", alpha=.3)+
ylim(25,80)
ggplot() + geom_polygon(data = map2, aes(x=long, y=lat, group=group), fill="grey", alpha=.3)+
ylim(25,80) + xlim(-200,0)
ggplot() + geom_polygon(data = map2, aes(x=long, y=lat, group=group), fill="grey", alpha=.3)+
ylim(25,80) + xlim(-125,150)
ggplot() + geom_polygon(data = map2, aes(x=long, y=lat, group=group), fill="grey", alpha=.3)
ggplot() + geom_polygon(data = map2, aes(x=long, y=lat, group=group), fill="grey", alpha=.3) +
ylim(25,80) + xlim(-200,-50)
ggplot() + geom_polygon(data = map2, aes(x=long, y=lat, group=group), fill="grey", alpha=.3) +
ylim(25,80) + xlim(-175,-50)
#Bubble map
map2<-map_data("world") %>% filter(region=="USA" & region!="Alaska") #getting boundaries of world (as polygon) and extracting US
ggplot() + geom_polygon(data = map2, aes(x=long, y=lat, group=group), fill="grey", alpha=.3)
#Bubble map
map2<-map_data("world") %>% filter(region=="USA") #getting boundaries of world (as polygon) and extracting US
View(map2)
names(map2$subregion)
test<-map2$subregion
View(test)
test<-as.factor(test)
head(test)
test %>% group_by(test)
summarise(test)
summarize(test)
names(test)
map2 %>% group_by(subregion) %>% summarise(n())
map2 %>% group_by(subregion)
map2 %>% group_by(subregion) %>% tally()
test<-map2 %>% group_by(subregion) %>% tally()
View(test)
map2<-map_data("world") %>% filter(region=="USA" & subregion!="Alaska") #getting boundaries of world (as polygon) and extracting US
ggplot() + geom_polygon(data = map2, aes(x=long, y=lat, group=group), fill="grey", alpha=.3)
ggplot() + geom_polygon(data = map2, aes(x=long, y=lat, group=group), fill="grey", alpha=.3)
map2<-map_data("world") %>% filter(region=="USA") #getting boundaries of world (as polygon) and extracting US
map2<-subset(map2, subregion != "Alaska")
ggplot() + geom_polygon(data = map2, aes(x=long, y=lat, group=group), fill="grey", alpha=.3)
ggplot() + geom_polygon(data = map2, aes(x=long, y=lat, group=group), fill=NA, colour = "darkgray", size=0.5)
map2<-map_data("world") %>% filter(region=="USA")
ggplot() + geom_polygon(data = map2, aes(x=long, y=lat, group=group), fill=NA, colour = "darkgray", size=0.5)
ggplot() + geom_polygon(data =
map<-map_data("world") %>% filter(region=="USA")
#map2<-subset(map2, subregion != "Alaska")
p<-ggplot() + geom_polygon(data = map, aes(x=long, y=lat, group=group), fill=NA, colour = "darkgray", size=0.5) +
ylim(15,50) + xlim(-175,-50)
map<-map_data("world") %>% filter(region=="USA")
p<-ggplot() + geom_polygon(data = map, aes(x=long, y=lat, group=group), fill=NA, colour = "darkgray", size=0.5)
p<-p + ylim(15,75) + xlim(-200,-50)
p
p<-p + ylim(15,75) + xlim(-180,-60)
p
p<-p + ylim(20,50) + xlim(-125,-60)
p
p<-p + ylim(23,50) + xlim(-125,-65)
p
p<-p + ylim(23,50) + xlim(-125,-68)
p
m<-get_map(location = 'US', zoom=4, maptype = "roadmap")#Getting a map of the United States
world_map<-ggmap(m) + geom_point(data=us_only, aes(x=Long, y=Lat), size=2, alpha=.5)
world_map
world_map
p
p<-ggplot() + geom_polygon(data = map, aes(x=long, y=lat, group=group), fill="gray", colour = "darkgray", size=0.5)
p<-p + ylim(23,50) + xlim(-125,-68)
p
#Bubble map CONUS
p<-ggplot() + geom_polygon(data = map, aes(x=long, y=lat, group=group), fill="gray", colour = "darkgray", size=0.8)
p<-p + ylim(23,50) + xlim(-125,-68)
p
p<-ggplot() + geom_polygon(data = map, aes(x=long, y=lat, group=group), fill="gray", colour = "darkgray", size=0.5) #setting line color, fill color, line size
p<-p + ylim(23,50) + xlim(-125,-68)
p
p<- p + geom_point( data=us_only, aes(x=Long, y=Lat))
p
p  + theme_void()
p<-p  + theme_void() #gets rid of axes
p + coord_map()
p
p<-ggplot() + geom_polygon(data = map, aes(x=long, y=lat, group=group), fill="gray", colour = "darkgray", size=0.5) #setting line color, fill color, line size
p<-p + ylim(23,50) + xlim(-125,-68) #resizing to just CONUS
p<- p + geom_point( data=us_only, aes(x=Long, y=Lat))
#p<-p  + theme_void() #gets rid of axes
p<-p + coord_map() #plotting with correct mercator projection (prior plot was cartesian coordinates)
p
m<-get_map(location = 'US', zoom=4, maptype = "roadmap")#Getting a map of the United States
#Adding points for confirmed cases
us_point<-ggmap(m) + geom_point(data=us_only, aes(x=Long, y=Lat), size=2, alpha=.5)
us_point
p
p<-ggplot() + geom_polygon(data = map, aes(x=long, y=lat, group=group), fill="gray", colour = "darkgray", size=0.5) #setting line color, fill color, line size
p<-p + ylim(23,50) + xlim(-125,-60) #resizing to just CONUS
p<- p + geom_point( data=us_only, aes(x=Long, y=Lat))
p
p<-p + coord_map()
p
p<- p + geom_point(data=us_only, aes(x=Long, y=Lat), alpha=0.5)
#p<-p  + theme_void() #gets rid of axes
p<-p + coord_map() #plotting with correct mercator projection (prior plot was cartesian coordinates)
p
p<- p + geom_point(data=us_only, aes(x=Long, y=Lat), alpha=Confirmed)
p<- p + geom_point(data=us_only, aes(x=Long, y=Lat), alpha=us_only$Confirmed)
p
p<- p + geom_point(data=us_only, aes(x=Long, y=Lat), alpha=1/10)
p
p<-ggplot() + geom_polygon(data = map, aes(x=long, y=lat, group=group), fill="gray", colour = "darkgray", size=0.5) #setting line color, fill color, line size
p<-p + ylim(23,50) + xlim(-125,-60) #resizing to just CONUS
p<- p + geom_point(data=us_only, aes(x=Long, y=Lat), alpha=1/10)
p
#p<-p  + theme_void() #gets rid of axes
p<-p + coord_map() #plotting with correct mercator projection (prior plot was cartesian coordinates)
p
install.packages("ggrepel")
library(ggrepel)
p<- p + geom_point(data=us_only, aes(x=Long, y=Lat), alpha=1/10, colours="blue")
p<- p + geom_point(data=us_only, aes(x=Long, y=Lat), alpha=1/10, color="blue")
p
p<- p + geom_point(data=us_only, aes(x=Long, y=Lat), alpha=3/10, color="blue")
p
#p<-p  + theme_void() #gets rid of axes
p<-p + coord_map() #plotting with correct mercator projection (prior plot was cartesian coordinates)
p
p<- p + geom_point(data=us_only, aes(x=Long, y=Lat), alpha=3/10, color="blue", size=Confirmed)
p
p<- p + geom_point(data=us_only, aes(x=Long, y=Lat, size=confirm), alpha=3/10, color="blue")
p
p<- p + geom_point(data=us_only, aes(x=Long, y=Lat, size=Confirmed, color=Confirmed))
p
p<- p + geom_point(data=us_only, aes(x=Long, y=Lat, size=Confirmed, color=Confirmed)) + scale_size_continuous(range=c(1,12))
p
levels(factor(us_only$Confirmed))
p<- p + geom_point(data=us_only, aes(x=Long, y=Lat, size=Confirmed))
p
df<-world.cities
View(df)
p<- p + geom_point(data=us_only, aes(x=Long, y=Lat, size=us_only$Confirmed))
p
test<-daily %>% dplyr::filter(Country=="US")
View(test)
#Filtering to only US confirmed cases
us_only<-daily %>% dplyr::filter(Country=="US")
us_only<-us_only %>% dplr:filter(State != c("Grand Princess", "Guam", "Puerto Rico", "United States Virgin Islands", "US", "Diamond Princess"))
us_only<-us_only %>% dplyr:filter(State != c("Grand Princess", "Guam", "Puerto Rico", "United States Virgin Islands", "US", "Diamond Princess"))
library(dplyr)
us_only<-us_only %>% dplyr::filter(State != c("Grand Princess", "Guam", "Puerto Rico", "United States Virgin Islands", "US", "Diamond Princess"))
#Filtering to only US confirmed cases
oconus<-c("Grand Princess", "Guam", "Puerto Rico", "United States Virgin Islands", "US", "Diamond Princess")
us_only<-daily %>% dplyr::filter(Country=="US")
us_only<-us_only %>% dplyr::filter(State != oconus)
nrow(us_only)
us_only<-daily %>% dplyr::filter(Country=="US")
nrow(us_only)
#Filtering to only US confirmed cases
oconus<-c("Grand Princess", "Guam")
us_only<-us_only %>% dplyr::filter(State != oconus)
install.packages("datasets")
install.packages("datasets")
us_only<-subset(us_only, us_only$State != oconus)
head(us_only)
View(us_only)
oconus<-c("Grand Princess", "Guam", "Puerto Rico", "United States Virgin Islands", "US", "Diamond Princess")
us_only<-subset(us_only, us_only$State !oconus)
exclude<-c("Grand Princess", "Guam", "Puerto Rico", "United States Virgin Islands", "US", "Diamond Princess")
us_only<-daily %>% dplyr::filter(Country=="US")
oconus<-us_only[us_only$State %in% exclude,]
View(oconus)
us_only<-us_only[!oconus]
us_only<-us_only[!oconus,]
us_only<-us_only[!(us_only$State==exclude_list),]
#Filtering to only US confirmed cases in the 50 states
exclude_list<-c("Grand Princess", "Guam", "Puerto Rico", "United States Virgin Islands", "US", "Diamond Princess")
us_only<-us_only[!(us_only$State==exclude_list),]
#Filtering to only US confirmed cases in the 50 states
library(tm)
us_only<-daily %>% dplyr::filter(Country=="US")
install.packages("tm")
library(tm)
us_only<-daily %>% dplyr::filter(Country=="US") %>% dplyr::select('State','Confirmed','Lat', 'Long')
us_only<-removeWords(us_only,exclude_list)
library(stringr)
test<-us_only %>% filter(str_detect(State, exclude_list, negate = TRUE))
us_only<-removeWords
(us_only,exclude_list)
daily<-read.csv2("C:/Users/Morganak/Documents/R/COVID_Project/COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/03-22-2020.csv", header=TRUE, sep=",", stringsAsFactors=FALSE)
str(daily)
names(daily)
colnames(daily)<-c('State','Country','Date','Confirmed', 'Deaths', 'Recover', 'Lat', 'Long')
install.packages("stylo")
library(stylo)
us_only<-daily %>% dplyr::filter(Country=="US") %>% dplyr::select('State','Confirmed','Lat', 'Long')
exclude_list<-c("Grand Princess", "Guam", "Puerto Rico", "United States Virgin Islands", "US", "Diamond Princess")
test<-delete.stop.words(us_only, stop.words = exclude_list)
test<-delete.stop.words(us_only, stop.words = "Guam")
test<-delete.stop.words(us_only$State, stop.words = "Guam")
View(test)
test<-delete.stop.words(us_only, stop.words = "Guam")
delete.stop.words(us_only, stop.words = "Guam")
head(us_only)
delete.stop.words(us_only, stop.words = 'New York')
names(us_only)
delete.stop.words(us_only, stop.words = 'State')
us_only<-daily %>% dplyr::filter(Country=="US") %>% dplyr::select('State','Confirmed','Lat', 'Long')
?state.name
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
states<-read.csv2(states.csv)
states<-read.csv2(states.csv)
states<-read.csv2("C:/Users/Morganak/Documents/R/COVID_Project/COVID-19/states.csv")
head(states)
states<-read.csv2("C:/Users/Morganak/Documents/R/COVID_Project/COVID-19/states.csv")
head(states)
us_only<-us_only %>% dplyr::filter(State %in% states)
library(dplyr)
us_only<-us_only %>% dplyr::filter(State %in% states)
is.vector(states)
as.vector(states)
is.vector(states)
states<-as.vector(states)
is.vector(states)
is.data.frame(states)
is.vector(s)
s<-states$State
s
is.vector(s)
avector <- as.vector(states['State'])
s <- as.vector(states['State'])
is.vector(s)
s <- states[['State']]
class(s)
s<-dplyr::pull(states,State)
s
is.vector(s)
class(states)
names(states)
s<-states[,"State"]
head(s)
is.vector(s)
us_only<-us_only %>% dplyr::filter(us_only$State %in% s)
View(us_only)
us_only<-daily %>% dplyr::filter(Country=="US") %>% dplyr::select('State','Confirmed','Lat', 'Long')
us_only<-filter(us_only, State %in% s)
us_only<-us_only%>% dplyr::select('Confirmed','Lat', 'Long')
us_only$Lat<-as.numeric(us_only$Lat)
us_only$Long<-as.numeric(us_only$Long)
p<-ggplot() + geom_polygon(data = map, aes(x=long, y=lat, group=group), fill="gray", colour = "darkgray", size=0.5) #setting line color, fill color, line size
p<-p + ylim(23,50) + xlim(-125,-60) #resizing to just CONUS
p<- p + geom_point(data=us_only, aes(x=Long, y=Lat, size=us_only$Confirmed))
+ scale_size_continuous(range=c(1,12))
library(ggplot2)
library(maps)
#Bubble map CONUS
p<-ggplot() + geom_polygon(data = map, aes(x=long, y=lat, group=group), fill="gray", colour = "darkgray", size=0.5) #setting line color, fill color, line size
p<-p + ylim(23,50) + xlim(-125,-60) #resizing to just CONUS
p<- p + geom_point(data=us_only, aes(x=Long, y=Lat, size=us_only$Confirmed))
+ scale_size_continuous(range=c(1,12))
#p<-p  + theme_void() #gets rid of axes
p<-p + coord_map()
p
map<-map_data("world") %>% filter(region=="USA")
#nice US map (including Alaska and Hawaii)
p<-ggplot() + geom_polygon(data = map, aes(x=long, y=lat, group=group), fill=NA, colour = "darkgray", size=0.5)
p
#Bubble map CONUS
p<-ggplot() + geom_polygon(data = map, aes(x=long, y=lat, group=group), fill="gray", colour = "darkgray", size=0.5) #setting line color, fill color, line size
p<-p + ylim(23,50) + xlim(-125,-60) #resizing to just CONUS
p
p<- p + geom_point(data=us_only, aes(x=Long, y=Lat, size=us_only$Confirmed))
p
+ scale_size_continuous(range=c(1,12))
#p<-p  + theme_void() #gets rid of axes
p<-p + coord_map() #plotting with correct mercator projection (prior plot was cartesian coordinates)
p
